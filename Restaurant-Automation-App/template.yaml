AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Restaurant-Automation-App

  Sample SAM Template for Restaurant-Automation-App

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  
  LoginTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: logintable
      AttributeDefinitions:
        - AttributeName: Resid
          AttributeType: S  
      KeySchema:
        - AttributeName: Resid
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 30
        WriteCapacityUnits: 30

  RestaurantTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: restaurant-table
      AttributeDefinitions:
        - AttributeName: ResId
          AttributeType: S 
        - AttributeName: RecordId 
          AttributeType: S
        - AttributeName: Resname 
          AttributeType: S
        - AttributeName: Resbranch 
          AttributeType: S
          
      KeySchema:
        - AttributeName: ResId
          KeyType: HASH
        - AttributeName: RecordId
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 30
        WriteCapacityUnits: 30
      GlobalSecondaryIndexes:
        - IndexName: menuGSI
          KeySchema:
            - AttributeName: ResId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 30
            WriteCapacityUnits: 30
        - IndexName: seatingGSI
          KeySchema:
            - AttributeName: ResId
              KeyType: HASH
          Projection:
            ProjectionType: ALL 
          ProvisionedThroughput:
            ReadCapacityUnits: 30
            WriteCapacityUnits: 30        
        - IndexName: resGSI
          KeySchema:
            - AttributeName: Resname
              KeyType: HASH            
            - AttributeName: Resbranch
              KeyType: RANGE
          Projection:
            ProjectionType: ALL 
          ProvisionedThroughput:
            ReadCapacityUnits: 30
            WriteCapacityUnits: 30


  RestaurantFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: restaurant/
      Handler: app.app
      Runtime: python3.6
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              !Ref RestaurantTable
        - DynamoDBCrudPolicy:
            TableName:
              !Ref LoginTable 
      Events:
        Test:
          Type: Api
          Properties:
            Path: /
            Method: get
        ListRestaurants:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /restaurants
            Method: get
        PutRestaurants:
          Type: Api
          Properties:
            Path: /restaurants
            Method: post
        ReadMenu:
          Type: Api
          Properties:
            Path: /restaurants/menu/{resid}
            Method: get
        AddDish:
          Type: Api
          Properties:
            Path: /restaurants/menu/dish/{resid}
            Method: put
        UpdateDish:
          Type: Api
          Properties:
            Path: /restaurants/menu/dish/{resid}
            Method: post
        DeleteDish:
          Type: Api
          Properties:
            Path: /restaurants/menu/dish/{resid}
            Method: delete
        ReadSeating:
          Type: Api
          Properties:
            Path: /restaurants/seating/{resid}
            Method: get
        RestSignup:
          Type: Api
          Properties:
            Path: /restaurants/signup
            Method: post
        RestLogin:
          Type: Api
          Properties:
            Path: /restaurants/login
            Method: post
        AddTable:
          Type: Api
          Properties:
            Path: /restaurants/seating/{resid}
            Method: put
        DeleteTable:
          Type: Api
          Properties:
            Path: /restaurants/seating/{resid}
            Method: delete
        BlockTable:
          Type: Api
          Properties:
            Path: /restaurants/seating/block/{resid}
            Method: post
        UnblockTable:
          Type: Api
          Properties:
            Path: /restaurants/seating/unblock/{resid}
            Method: post
        RestDelete:
          Type: Api
          Properties:
            Path: /restaurants/delete
            Method: delete
        RestUpdate:
          Type: Api
          Properties:
            Path: /restaurants/update
            Method: post
        RestOffers:
          Type: Api
          Properties:
            Path: /restaurants/offer
            Method: post
        AllocateTable:
          Type: Api
          Properties:
            Path: /customer/allocatetable
            Method: post
        FetchID:
          Type: Api
          Properties:
            Path: /customer/fetchid
            Method: post
        AddOrder:
          Type: Api
          Properties:
            Path: /customer/order/{resid}
            Method: post
        GetOrder:
          Type: Api
          Properties:
            Path: /customer/getorder/{resid}
            Method: post      
        UpdateMem:
          Type: Api
          Properties:
            Path: /restaurants/updatemem
            Method: post      
        GetMem:
          Type: Api
          Properties:
            Path: /restaurants/getmem
            Method: post   
        GetOrders:          
          Type: Api
          Properties:
            Path: /restaurants/getorders
            Method: post      
        

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  RestaurantApi:
    Description: "API Gateway endpoint URL for Prod stage for restuarant function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  RestaurantFunction:
    Description: "Restaurant Lambda Function ARN"
    Value: !GetAtt RestaurantFunction.Arn
  RestaurantFunctionIamRole:
    Description: "Implicit IAM Role created for Restaurant function"
    Value: !GetAtt RestaurantFunctionRole.Arn
